{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.persistor = exports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _reduxSaga = _interopRequireDefault(require(\"redux-saga\"));\n\nvar _reduxBatch = require(\"@manaflair/redux-batch\");\n\nvar _reduxPersist = require(\"redux-persist\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _rootReducer = require(\"./rootReducer\");\n\nvar _rootSaga = _interopRequireDefault(require(\"./rootSaga\"));\n\nvar sagaMiddleware = (0, _reduxSaga.default)();\nvar persistConfig = {\n  key: 'root',\n  storage: _asyncStorage.default,\n  blacklist: [],\n  whitelist: ['global']\n};\nvar persistedReducer = (0, _reduxPersist.persistReducer)(persistConfig, _rootReducer.rootReducer);\nvar store = (0, _toolkit.configureStore)({\n  reducer: persistedReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return [].concat((0, _toConsumableArray2.default)(getDefaultMiddleware({\n      immutableCheck: false,\n      serializableCheck: false,\n      thunk: true\n    })), [sagaMiddleware]);\n  },\n  enhancers: [_reduxBatch.reduxBatch]\n});\nvar persistor = (0, _reduxPersist.persistStore)(store);\nexports.persistor = persistor;\nsagaMiddleware.run(_rootSaga.default);\nvar _default = store;\nexports.default = _default;","map":{"version":3,"names":["sagaMiddleware","createSagaMiddleware","persistConfig","key","storage","AsyncStorage","blacklist","whitelist","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","enhancers","reduxBatch","persistor","persistStore","run","rootSaga"],"sources":["I:/16.QLKCN_new/app/kndn/app/redux/store.js"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {reduxBatch} from '@manaflair/redux-batch';\r\nimport {persistStore, persistReducer} from 'redux-persist';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport {rootReducer} from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n/* const middleware = [\r\n  ...getDefaultMiddleware({\r\n    immutableCheck: false,\r\n    serializableCheck: false,\r\n    thunk: true,\r\n  }),\r\n  sagaMiddleware,\r\n]; */\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: AsyncStorage,\r\n  blacklist: [],\r\n  whitelist: ['global'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware({\r\n      immutableCheck: false,\r\n      serializableCheck: false,\r\n      thunk: true,\r\n    }),\r\n    sagaMiddleware,\r\n  ],\r\n  enhancers: [reduxBatch],\r\n});\r\n\r\n//export const store = createStore(reducers, applyMiddleware(sagaMiddleware));\r\nexport const persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA,IAAMA,cAAc,GAAG,IAAAC,kBAAA,GAAvB;AASA,IAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBC,OAAO,EAAEC,qBAFW;EAGpBC,SAAS,EAAE,EAHS;EAIpBC,SAAS,EAAE,CAAC,QAAD;AAJS,CAAtB;AAOA,IAAMC,gBAAgB,GAAG,IAAAC,4BAAA,EAAeP,aAAf,EAA8BQ,wBAA9B,CAAzB;AAEA,IAAMC,KAAK,GAAG,IAAAC,uBAAA,EAAe;EAC3BC,OAAO,EAAEL,gBADkB;EAE3BM,UAAU,EAAE,oBAACC,oBAAD;IAAA,kDACPA,oBAAoB,CAAC;MACtBC,cAAc,EAAE,KADM;MAEtBC,iBAAiB,EAAE,KAFG;MAGtBC,KAAK,EAAE;IAHe,CAAD,CADb,IAMVlB,cANU;EAAA,CAFe;EAU3BmB,SAAS,EAAE,CAACC,sBAAD;AAVgB,CAAf,CAAd;AAcO,IAAMC,SAAS,GAAG,IAAAC,0BAAA,EAAaX,KAAb,CAAlB;;AAEPX,cAAc,CAACuB,GAAf,CAAmBC,iBAAnB;eAEeb,K"},"metadata":{},"sourceType":"script"}